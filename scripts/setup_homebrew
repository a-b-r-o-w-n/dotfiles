#!/usr/bin/env zsh

do_upgrade=false
if [ "$1" = "--upgrade" ]; then
  do_upgrade=true
fi

PACKAGES=(
  autojump
  cmake
  dateutils
  direnv
  git
  # go
  htop
  httpie
  # imagemagick
  jq
  moreutils
  neovim
  node
  # rbenv
  # rbenv-gemset
  ripgrep
  tldr
  # tmux
  zsh-completions
)


autoload -U colors && colors
function print_info {
  group=$1
  message="$2"

  echo "$fg[magenta][$group]$reset_color $message"
}

function install_brew {
  if which brew > /dev/null 2>&1; then
    echo "already installed. skipping..."
  else
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi
  update_brew
}

function update_brew {
  echo "updating..."
  brew update
}

function install_package {
  pkg=$1

  if echo $INSTALLED_PACKAGES | grep -q $pkg; then
    echo "already installed. skipping..."
  else
    brew install $pkg
  fi
}

function upgrade_package {
  pkg=$1

  if echo $OUTDATED_PACKAGES | grep -q $pkg; then
    echo "upgrade? (Y/n) "
    read -k 1 -s answer
    echo "$answer"
    if [[ "$answer" =~ ^[Yy]$ ]]; then
      brew upgrade $pkg 2>&1
    fi
  else
    echo "Already up-to-date."
  fi
}

function install_or_upgrade_packages {
  INSTALLED_PACKAGES=$(brew list --versions)
  OUTDATED_PACKAGES=$(brew outdated)
  for package in "${PACKAGES[@]}"; do
    if [ "$do_upgrade" = true ]; then
      upgrade_package $package
    else
      install_package $package
    fi | while read msg; do
      print_info $package $msg
    done
  done
}

install_brew | while read msg; do print_info "homebrew" $msg; done
install_or_upgrade_packages
